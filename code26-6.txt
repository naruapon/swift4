import UIKit

class ViewController: UIViewController, UINavigationControllerDelegate, UIImagePickerControllerDelegate {
   @IBOutlet weak var pictureView: UIImageView!
    
   @IBAction func takePicture(_ sender: UIButton) {
      let mediaPicker = UIImagePickerController()
      mediaPicker.delegate = self
      let sourceAvailable = UIImagePickerController.isSourceTypeAvailable(.camera)
      if sourceAvailable {
         mediaPicker.sourceType = .camera
         present(mediaPicker, animated: true, completion: nil)
      } else {
         print("The media is not available")
      }
   }
   func imagePickerController(_ picker: UIImagePickerController, didFinishPickingMediaWithInfo info: [String : Any]) {
      let picture = info[UIImagePickerControllerOriginalImage] as! UIImage
      let scale = UIScreen.main.scale
      let maximum: CGFloat = 80
      var width = picture.size.width / scale
      var height = picture.size.height / scale
        
      if width > height {
         height = height * maximum / width
         width = maximum
      } else {
         width = width * maximum / height
         height = maximum
      }
      let render = UIGraphicsImageRenderer(size: CGSize(width: width, height: height))
      render.image(actions: { (renderContext) in
         let context = renderContext.cgContext
         UIGraphicsPushContext(context)
         picture.draw(in: CGRect(x: 0, y: 0, width: width, height: height))
         pictureView.image = renderContext.currentImage
      })
      dismiss(animated: true, completion: nil)
   }
   func imagePickerControllerDidCancel(_ picker: UIImagePickerController) {
      dismiss(animated: true, completion: nil)
   }
}