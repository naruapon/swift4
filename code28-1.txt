import UIKit
import Contacts

class ContactsViewController: UITableViewController {
   var contactList: [CNContact]!
    
   override func viewWillAppear(_ animated: Bool) {
      super.viewWillAppear(animated)
        
      let store = CNContactStore()
      store.requestAccess(for: .contacts, completionHandler: { (success, error) in
         if success {
            let request = CNContactFetchRequest(keysToFetch: [CNContactGivenNameKey as CNKeyDescriptor, CNContactFamilyNameKey as CNKeyDescriptor])
            do {
               self.contactList = []
               try store.enumerateContacts(with: request, usingBlock: { (contact, status) in
                  self.contactList.append(contact)
               })
            } catch {
               print("Error")
            }
            OperationQueue.main.addOperation({
               self.tableView.reloadData()
            })
         }
      })
   }
   override func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
      if contactList != nil {
         return contactList.count
      }
      return 0
   }
   override func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
      let cell = tableView.dequeueReusableCell(withIdentifier: "contactCell", for: indexPath)
      let contact = contactList[indexPath.row]
      cell.textLabel?.text = "\(contact.givenName) \(contact.familyName)"
      return cell
   }
}